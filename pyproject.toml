[build-system]
requires = ["setuptools>=64","setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "digital-land"
# NOTE: dynamic version because you use get_version() in setup.py
dynamic = ["version", "readme"]

description = "Data pipeline tools to collect data and process it into a dataset"
authors = [
    { name = "MHCLG Planning Data Team", email = "DigitalLand@communities.gov.uk" },
]
license = { text = "MIT" }
urls = { Homepage = "https://github.com/digital-land/digital-land-python" }

dependencies = [
    "datasette",
    "canonicaljson",
    "click",
    "cchardet",
    "esridump",
    "pandas",
    "pyproj",
    "requests",
    "validators",
    "xlrd==1.2.0",
    "openpyxl",
    "numpy<2",
    "Shapely==2.0.2",
    "SPARQLWrapper",
    "geojson",
    "spatialite",
    "pyyaml",
    "dataclasses-json",
    "pydantic",
    "json-stream",
    "duckdb",
    "dask",
    "dask[dataframe]",
    "pyarrow",
    "pygit2",
    "boto3",
    "moto",
    "psutil",
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Database",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[project.optional-dependencies]
test = [
    "coverage",
    "flake8",
    "pytest",
    "coveralls",
    "twine",
    "responses",
    "XlsxWriter",
    "wasabi",
    "pytest-mock",
    "pre-commit",
    "sphinx",
    "sphinx-autobuild",
    "sphinx_rtd_theme",
    "black",
]

notebook = [
    "jupyterlab",
]

[project.scripts]
digital-land = "digital_land.cli:cli"

[tool.setuptools]
packages = { find = {exclude = ["tests","docs"] } }

[tool.setuptools.dynamic]
# dynamic fields tell setuptools to fetch these at build time
readme = { file = ["README.md"], content-type = "text/markdown" }
