import shapely.wkt
from shapely.validation import explain_validity
import pytest

from digital_land.datatype.wkt import WktDataType
from digital_land.log import IssueLog


def test_normalise_returns_valid_shape():
    input_wkt = "MULTIPOLYGON (((460316.9266 298735.6545,460316.9266 298731.3933,460311.2699 298731.127,460311.9181 298731.223,460304.7879 298735.6593,460304.7854 298735.6545,460316.9266 298735.6545)))"  # noqa: E501
    issue_log = IssueLog()
    output_wkt = WktDataType().normalise(input_wkt, issues=issue_log)
    output_geometry = shapely.wkt.loads(output_wkt)
    assert output_geometry.is_valid, explain_validity(output_geometry)


def test_normalise_returns_empty_geometry():
    input_wkt = "MULTIPOLYGON (((471419.04 240369.58,471418.996 240371.622,471419.0 240371.6,471419.04 240369.58)))"  # noqa: E501
    issue_log = IssueLog()
    output_wkt = WktDataType().normalise(input_wkt, issues=issue_log)
    assert output_wkt == ""


@pytest.mark.parametrize(
    "input_wkt",
    [
        "MultiPolygon (((-1.62066432 54.97038806, -1.62066759 54.97038101, -1.62066778 54.97038075, -1.6206681 54.97038055, -1.62066852 54.97038041, -1.62066898 54.97038034, -1.62066946 54.97038036, -1.62066958 54.97038038, -1.6206699 54.97038033, -1.62067041 54.97038035, -1.62069152 54.9703834, -1.62073905 54.97038995, -1.62073951 54.97039006, -1.62073989 54.97039025, -1.62074014 54.97039049, -1.62074025 54.97039077, -1.62074019 54.97039106, -1.62074018 54.97039108, -1.62074013 54.97039136, -1.62071673 54.97044112, -1.62083169 54.97045914, -1.62083213 54.97045925, -1.62083249 54.97045944, -1.62083274 54.97045968, -1.62083284 54.97045995, -1.62083279 54.97046023, -1.6208327 54.97046044, -1.62083266 54.97046064, -1.62080007 54.97053321, -1.62079997 54.97053334, -1.6207997 54.97053394, -1.620799 54.97053384, -1.62079864 54.97053388, -1.62079816 54.97053385, -1.62079659 54.97053361, -1.62079649 54.97053383, -1.62071552 54.97052117, -1.62067854 54.9705155, -1.62064044 54.97051041, -1.62050794 54.97049343, -1.62050751 54.97049333, -1.62050715 54.97049317, -1.6205035 54.97049096, -1.62050325 54.97049076, -1.6205031 54.97049053, -1.62050283 54.97048983, -1.62050135 54.97048941, -1.62050095 54.97048925, -1.62050066 54.97048902, -1.6205005 54.97048875, -1.62049608 54.97047376, -1.6204961 54.9704734, -1.6205112 54.97043666, -1.62053771 54.97037092, -1.6205379 54.97037066, -1.62053822 54.97037044, -1.62053864 54.97037029, -1.62053912 54.97037023, -1.62053961 54.97037025, -1.62066432 54.97038806),(-1.62051009 54.97049186, -1.62050862 54.97049145, -1.62050909 54.97049173, -1.62051009 54.97049186),(-1.62054069 54.97037274, -1.62051439 54.97043672, -1.6204997 54.97047314, -1.62050556 54.97048859, -1.6205188 54.9704923, -1.62064122 54.97050866, -1.6206756 54.97051307, -1.62067567 54.97051308, -1.62071721 54.97051957, -1.6207974 54.97053187, -1.6208292 54.97046104, -1.6207137 54.97044331, -1.62071326 54.97044319, -1.62071289 54.970443, -1.62071265 54.97044276, -1.62071255 54.97044248, -1.6207126 54.9704422, -1.62073661 54.97039177, -1.62069107 54.97038519, -1.62067122 54.97038246, -1.6206689 54.97038958, -1.62066872 54.97038986, -1.62066841 54.97039008, -1.62066798 54.97039024, -1.62066749 54.97039031, -1.62066698 54.97039029, -1.62066651 54.97039022, -1.62066643 54.97039033, -1.6206661 54.97039054, -1.62066569 54.97039068, -1.62066521 54.97039074, -1.62066473 54.97039071, -1.62054069 54.97037274)))",  # noqa: E501
    ],
)
def test_normalise_maintains_number_of_holes(input_wkt):
    # calculate number of holes in input
    input_geom = shapely.wkt.loads(input_wkt)
    input_count = 0
    for geom in input_geom.geoms:
        input_count += len(geom.interiors)
    #  get output_wkt
    issue_log = IssueLog()
    output_wkt = WktDataType().normalise(input_wkt, issues=issue_log)
    output_geom = shapely.wkt.loads(output_wkt)
    output_count = 0
    for geom in output_geom.geoms:
        output_count += len(geom.interiors)

    assert input_count == output_count


def test_normalise_geojson_provided():
    wkt = WktDataType()
    issues = IssueLog()

    value = (
        '{"type":"MultiPolygon","coordinates":[[[[-0.143512,51.558395], '
        "[-0.143592,51.558364],[-0.143665,51.558334],[-0.143677,51.558329], "
        "[-0.143698,51.558348],[-0.143702,51.558352],[-0.143686,51.558392],"
        "[-0.143673,51.558398],[-0.143658,51.558404],[-0.143558,51.558442],"
        "[-0.143512,51.558395],[-0.143512,51.558395]]]]}"
    )
    expected = "MULTIPOLYGON (((-0.143512 51.558395,-0.143558 51.558442,-0.143686 51.558392,-0.143702 51.558352,-0.143677 51.558329,-0.143512 51.558395)))"

    actual = wkt.normalise(value, issues=issues)
    assert actual == expected
    assert len(issues.rows) == 1, "more than 1 issues being generated"
    assert issues.rows[0]["issue-type"] == "invalid type geojson"


def test_normalise_geometrycollection_provided():
    wkt = WktDataType()
    issues = IssueLog()

    value = (
        "GEOMETRYCOLLECTION (MULTIPOLYGON (((-0.173644 51.549807, -0.173698 51.549808, -0.173711 51.549808, -0.173712 51.549804,"
        "-0.173779 51.549803, -0.173966 51.549796, -0.174 51.549795, -0.174008 51.549796, -0.174024 51.549799, -0.174024 51.549799,"
        "-0.174028 51.549803, -0.174031 51.549807, -0.174032 51.549812, -0.174034 51.549817, -0.174039 51.549828, -0.174041 51.549918,"
        "-0.174041 51.549928, -0.173963 51.549928, -0.17393 51.549928, -0.173877 51.54993, -0.173806 51.549933, -0.173724 51.549935,"
        "-0.173689 51.549976, -0.173645 51.549975, -0.17355 51.549971, -0.173554 51.549913, -0.173545 51.549912, -0.173545 51.549902,"
        "-0.173547 51.549872, -0.173551 51.549811, -0.173644 51.549807)),((-0.17679 51.555154, -0.176851 51.555112, -0.1769 51.555147,"
        "-0.176995 51.555106, -0.177028 51.555139, -0.177085 51.555194, -0.177041 51.555212, -0.177025 51.555233, -0.177006 51.555227,"
        "-0.176994 51.555231, -0.176991 51.55523, -0.176896 51.555199, -0.176884 51.555212, -0.176822 51.555174, -0.17679 51.555154,"
        "-0.17679 51.555154)),((-0.176757 51.552538, -0.176746 51.552526, -0.176662 51.552557, -0.176651 51.552562, -0.176627 51.552538,"
        "-0.176595 51.552506, -0.176707 51.552463, -0.176758 51.552515, -0.176793 51.552502, -0.176804 51.552519, -0.176757 51.552538,"
        "-0.176757 51.552538))))"
    )

    expected = (
        "MULTIPOLYGON (((-0.173644 51.549807,-0.173551 51.549811,-0.173545 51.549902,"
        "-0.173545 51.549912,-0.173554 51.549913,-0.173550 51.549971,-0.173689 51.549976,"
        "-0.173724 51.549935,-0.174041 51.549928,-0.174039 51.549828,-0.174024 51.549799,"
        "-0.173644 51.549807)),"
        "((-0.176790 51.555154,-0.176884 51.555212,-0.176896 51.555199,-0.176994 51.555231,"
        "-0.177025 51.555233,-0.177041 51.555212,-0.177085 51.555194,-0.176995 51.555106,"
        "-0.176900 51.555147,-0.176851 51.555112,-0.176790 51.555154)),"
        "((-0.176757 51.552538,-0.176804 51.552519,-0.176793 51.552502,-0.176758 51.552515,"
        "-0.176707 51.552463,-0.176595 51.552506,-0.176651 51.552562,-0.176746 51.552526,"
        "-0.176757 51.552538)))"
    )

    actual = wkt.normalise(value, issues=issues)
    assert actual == expected
    assert len(issues.rows) == 0


def test_invalid_geometry_type_throws_correct_error():
    wkt = WktDataType()
    issues = IssueLog()

    value = "LINEARRING(0 0, 1 1, 1 0, 0 0)"

    assert wkt.normalise(value, issues=issues) == ""
    assert len(issues.rows) == 1, "more than 1 issues being generated"
    assert issues.rows[0]["issue-type"] == "Unexpected geom type"


def test_normalise_invalid_boundary_geometry_type_throws_error():
    wkt = WktDataType()
    issues = IssueLog()

    value = "POINT(0 0)"
    boundary = "POINT(0 0)"
    assert wkt.normalise(value, issues=issues, boundary=boundary) == ""
    assert (
        issues.rows[0]["issue-type"]
        == "Boundary must be of type Polygon or MultiPolygon"
    )


def test_normalise_invalid_boundary_type_throws_error():
    wkt = WktDataType()
    issues = IssueLog()

    value = "POINT(0 0)"
    boundary = "String"
    assert wkt.normalise(value, issues=issues, boundary=boundary) == ""
    assert issues.rows[0]["issue-type"] == "Error reading boundary, must be a WKT"


def test_normalise_custom_boundary_wgs84_point_within():
    wkt = WktDataType()
    issues = IssueLog()

    boundary = "POLYGON ((0 0, 0 1, 1 1, 1 0, 0 0))"
    input_wkt = "POINT (0.5 0.5)"

    wkt.normalise(input_wkt, issues=issues, boundary=boundary)
    assert len(issues.rows) == 0


def test_normalise_custom_boundary_wgs84_point_not_within():
    wkt = WktDataType()
    issues = IssueLog()

    boundary = "POLYGON ((0 0, 0 1, 1 1, 1 0, 0 0))"
    input_wkt = "POINT (2 2)"

    wkt.normalise(input_wkt, issues=issues, boundary=boundary)
    assert len(issues.rows) == 1
    assert issues.rows[0]["issue-type"] == "WGS84 out of bounds of custom boundary"


def test_normalise_custom_boundary_northings_easting_point_within():
    wkt = WktDataType()
    issues = IssueLog()

    # Boundary is Westminster LPA
    boundary = "MULTIPOLYGON (((-0.17401 51.538041, -0.174069 51.538108, -0.174098 51.538156, -0.174116 51.538202, -0.174128 51.538279, -0.173896 51.539479, -0.178273 51.539794, -0.178546 51.539795, -0.178739 51.539787, -0.179013 51.539762, -0.179288 51.539707, -0.179727 51.539648, -0.180156 51.539563, -0.180395 51.539502, -0.181576 51.539148, -0.182724 51.538768, -0.183848 51.538381, -0.184053 51.538263, -0.184443 51.538077, -0.184618 51.537955, -0.184676 51.537903, -0.187726 51.535036, -0.187816 51.534989, -0.187877 51.534947, -0.187953 51.534878, -0.188558 51.534596, -0.188749 51.534526, -0.189034 51.534778, -0.189191 51.53489, -0.1893 51.534988, -0.189401 51.535064, -0.189645 51.5352, -0.189811 51.535267, -0.190381 51.535534, -0.1908 51.535761, -0.191057 51.53594, -0.19126 51.53611, -0.191459 51.536291, -0.19301 51.533991, -0.192745 51.533666, -0.192383 51.533303, -0.192357 51.533257, -0.192349 51.533212, -0.19236 51.533009, -0.192386 51.532896, -0.192534 51.532631, -0.19264 51.532463, -0.192868 51.532135, -0.193114 51.531818, -0.194259 51.530466, -0.195672 51.528754, -0.196389 51.527908, -0.196503 51.527738, -0.196538 51.527702, -0.196544 51.527656, -0.196822 51.527737, -0.196822 51.527857, -0.196907 51.527928, -0.196997 51.527946, -0.197158 51.527944, -0.197225 51.527932, -0.197476 51.527854, -0.197774 51.527902, -0.197926 51.52837, -0.19805 51.528618, -0.197971 51.528728, -0.197949 51.528771, -0.19793 51.528852, -0.197948 51.529019, -0.197977 51.529114, -0.197978 51.529163, -0.197901 51.529615, -0.197916 51.529938, -0.197951 51.530079, -0.197969 51.530122, -0.198191 51.530374, -0.198273 51.530447, -0.19857 51.530664, -0.198661 51.530739, -0.198834 51.530857, -0.198994 51.530938, -0.19915 51.530995, -0.199306 51.531091, -0.199387 51.531153, -0.199538 51.53124, -0.200424 51.53162, -0.20065 51.531699, -0.201083 51.53191, -0.201273 51.532047, -0.201375 51.532157, -0.201451 51.532303, -0.201665 51.532562, -0.201853 51.532568, -0.20201 51.532602, -0.202968 51.532904, -0.203241 51.532883, -0.203574 51.532888, -0.204579 51.532944, -0.205285 51.532959, -0.205506 51.532952, -0.206235 51.5329, -0.206584 51.53286, -0.207311 51.53284, -0.207624 51.532822, -0.207922 51.532779, -0.208657 51.532637, -0.209311 51.532474, -0.209663 51.532375, -0.210817 51.532014, -0.211027 51.531961, -0.211378 51.531907, -0.211711 51.531844, -0.212234 51.531813, -0.213243 51.531768, -0.214022 51.531615, -0.21467 51.53152, -0.215183 51.531391, -0.215244 51.531366, -0.215304 51.531325, -0.215326 51.531293, -0.215338 51.53125, -0.215336 51.531199, -0.215143 51.530565, -0.215079 51.530397, -0.215073 51.53034, -0.21508 51.53026, -0.215105 51.530174, -0.215154 51.530074, -0.215204 51.529995, -0.215241 51.529952, -0.21529 51.529914, -0.215351 51.52988, -0.215447 51.529846, -0.215538 51.5298, -0.215859 51.529727, -0.215923 51.529563, -0.216016 51.529258, -0.216052 51.529075, -0.216064 51.528876, -0.216005 51.52793, -0.215791 51.52783, -0.215882 51.527659, -0.215899 51.527589, -0.215899 51.527499, -0.215809 51.527263, -0.215651 51.526916, -0.215547 51.526722, -0.213729 51.526876, -0.213291 51.526899, -0.212674 51.526868, -0.211938 51.526815, -0.210254 51.526683, -0.20997 51.526646, -0.209554 51.52658, -0.208813 51.526429, -0.208212 51.526318, -0.208045 51.526308, -0.207583 51.526259, -0.207295 51.526241, -0.206952 51.526187, -0.206483 51.526067, -0.206154 51.525944, -0.205878 51.525741, -0.205667 51.525535, -0.205465 51.525299, -0.205166 51.52493, -0.205017 51.524716, -0.204341 51.523841, -0.203857 51.523461, -0.203534 51.523319, -0.202994 51.523133, -0.20256 51.523021, -0.201615 51.522744, -0.201601 51.522622, -0.201531 51.522348, -0.201504 51.521984, -0.200612 51.520797, -0.200623 51.520712, -0.200748 51.520715, -0.200744 51.520823, -0.20122 51.520838, -0.202201 51.520888, -0.202645 51.520901, -0.203085 51.520819, -0.203466 51.520712, -0.203742 51.520624, -0.203556 51.520454, -0.203395 51.520263, -0.203256 51.519875, -0.203185 51.519766, -0.202946 51.519475, -0.202355 51.518849, -0.201457 51.517803, -0.200723 51.517978, -0.19987 51.516778, -0.199178 51.514553, -0.195743 51.514958, -0.19505 51.515033, -0.194343 51.512714, -0.194041 51.511758, -0.193631 51.511693, -0.19296 51.511815, -0.192122 51.509874, -0.191699 51.509941, -0.190913 51.51002, -0.189696 51.510078, -0.188538 51.510159, -0.187909 51.51018, -0.184385 51.502114, -0.184235 51.501795, -0.183057 51.501568, -0.182591 51.501499, -0.182037 51.501449, -0.181633 51.501422, -0.18135 51.501431, -0.180907 51.501423, -0.180312 51.501462, -0.179725 51.498687, -0.179547 51.49778, -0.173543 51.498222, -0.173535 51.498302, -0.17246 51.498393, -0.172448 51.49847, -0.171781 51.498534, -0.171777 51.498609, -0.171475 51.498689, -0.16962 51.498904, -0.16839 51.499022, -0.168178 51.498998, -0.168026 51.498885, -0.167904 51.498522, -0.167615 51.498304, -0.165779 51.499243, -0.165481 51.498698, -0.162833 51.500131, -0.162574 51.500294, -0.162342 51.500472, -0.161546 51.501227, -0.16132 51.501396, -0.160999 51.501591, -0.160757 51.501705, -0.160564 51.501767, -0.159149 51.502104, -0.158576 51.502234, -0.158448 51.50225, -0.158478 51.501516, -0.158501 51.501409, -0.158492 51.501261, -0.158476 51.501207, -0.158412 51.501081, -0.157849 51.499019, -0.156072 51.497764, -0.155654 51.495629, -0.155608 51.495504, -0.155523 51.49534, -0.155295 51.495065, -0.155612 51.49488, -0.155817 51.494732, -0.155914 51.494639, -0.155989 51.494495, -0.154995 51.493855, -0.155984 51.493223, -0.154793 51.491964, -0.155796 51.491452, -0.15563 51.490897, -0.155544 51.490671, -0.155437 51.490448, -0.155173 51.490049, -0.155849 51.489607, -0.153461 51.488181, -0.1517 51.487057, -0.151389 51.486876, -0.150342 51.486234, -0.150171 51.486093, -0.150095 51.485978, -0.150062 51.485897, -0.149976 51.485468, -0.149216 51.485522, -0.149176 51.485676, -0.149215 51.485867, -0.14923 51.485892, -0.149441 51.485928, -0.149543 51.48597, -0.149639 51.486032, -0.149695 51.486106, -0.149566 51.486207, -0.149325 51.486179, -0.149264 51.486152, -0.149179 51.486207, -0.14907 51.486208, -0.149062 51.48617, -0.149042 51.486156, -0.148944 51.485878, -0.149042 51.485887, -0.14906 51.485878, -0.148997 51.485543, -0.148712 51.485556, -0.148476 51.485578, -0.147737 51.485625, -0.147717 51.485611, -0.146975 51.485608, -0.146942 51.485615, -0.146932 51.485647, -0.146571 51.485679, -0.146453 51.485677, -0.145913 51.485638, -0.145428 51.485593, -0.144297 51.485479, -0.143633 51.485396, -0.142139 51.485149, -0.141787 51.485084, -0.141796 51.485066, -0.141723 51.485053, -0.141713 51.48507, -0.141389 51.485006, -0.140786 51.484908, -0.140038 51.484821, -0.139647 51.484799, -0.139241 51.484792, -0.138884 51.484788, -0.138293 51.484799, -0.13732 51.484849, -0.136714 51.484907, -0.136185 51.484978, -0.135982 51.485067, -0.136005 51.485122, -0.13492 51.485287, -0.134771 51.485191, -0.134428 51.485262, -0.132794 51.485639, -0.132498 51.48573, -0.13206 51.48589, -0.131588 51.486124, -0.131289 51.486292, -0.13093 51.486547, -0.130733 51.486659, -0.129107 51.487743, -0.128548 51.488107, -0.12852 51.488094, -0.128257 51.488314, -0.128334 51.488349, -0.128361 51.488326, -0.128464 51.488373, -0.127299 51.489549, -0.127081 51.489644, -0.126983 51.489702, -0.126829 51.489822, -0.126292 51.490493, -0.125693 51.491219, -0.125479 51.491503, -0.125317 51.491778, -0.12499 51.492547, -0.124958 51.492639, -0.124903 51.492852, -0.124952 51.492978, -0.124923 51.493248, -0.124965 51.493251, -0.124763 51.4944, -0.124732 51.494625, -0.124677 51.494815, -0.124664 51.495032, -0.124627 51.495397, -0.124522 51.496139, -0.124409 51.496779, -0.124184 51.49795, -0.124163 51.497948, -0.124145 51.498027, -0.124182 51.49803, -0.12416 51.498139, -0.124125 51.498136, -0.124064 51.498372, -0.12389 51.49932, -0.123706 51.50024, -0.123726 51.500519, -0.12371 51.500617, -0.123634 51.500612, -0.123602 51.500765, -0.123588 51.500765, -0.123568 51.500788, -0.123549 51.501023, -0.123557 51.501042, -0.123575 51.501043, -0.123566 51.501188, -0.123556 51.501205, -0.123649 51.501203, -0.123629 51.501395, -0.123677 51.501397, -0.123648 51.501706, -0.123601 51.501704, -0.12358 51.501897, -0.123513 51.501894, -0.123493 51.501886, -0.123502 51.501902, -0.123485 51.502062, -0.123459 51.502251, -0.123447 51.50225, -0.123456 51.502266, -0.123433 51.502441, -0.12342 51.502441, -0.123429 51.502455, -0.123402 51.502632, -0.12339 51.502631, -0.123398 51.502645, -0.123369 51.502822, -0.123359 51.502822, -0.123366 51.502833, -0.123335 51.503007, -0.123323 51.50302, -0.123332 51.503021, -0.123298 51.503194, -0.123286 51.503207, -0.123295 51.503208, -0.123259 51.503384, -0.12325 51.503383, -0.123256 51.503396, -0.123219 51.503574, -0.123209 51.503574, -0.123216 51.503585, -0.123173 51.50376, -0.123164 51.503759, -0.123168 51.503773, -0.12315 51.503848, -0.123116 51.503845, -0.12311 51.503859, -0.123127 51.503861, -0.123103 51.503954, -0.123055 51.503948, -0.123057 51.503941, -0.123033 51.503939, -0.123037 51.503915, -0.122996 51.503911, -0.12296 51.504047, -0.123 51.504051, -0.123008 51.504029, -0.123032 51.504032, -0.123033 51.504025, -0.123079 51.504031, -0.123082 51.504041, -0.123061 51.504121, -0.123049 51.504134, -0.123077 51.504138, -0.123058 51.504214, -0.123047 51.504227, -0.123055 51.504228, -0.123006 51.504402, -0.122999 51.504401, -0.123003 51.504416, -0.122894 51.504777, -0.122881 51.504789, -0.12289 51.504791, -0.122836 51.504963, -0.122823 51.504976, -0.122832 51.504978, -0.122777 51.505148, -0.122769 51.505147, -0.122773 51.505159, -0.12268 51.505418, -0.122631 51.505528, -0.122638 51.505529, -0.122517 51.505815, -0.122484 51.505882, -0.122476 51.505881, -0.122478 51.505895, -0.122393 51.506061, -0.12226 51.506063, -0.122277 51.506134, -0.122127 51.506367, -0.122073 51.506468, -0.122008 51.506553, -0.121915 51.506525, -0.12164 51.506883, -0.121704 51.506947, -0.121598 51.507087, -0.121545 51.507114, -0.121575 51.507122, -0.121539 51.507168, -0.12151 51.50716, -0.121507 51.507201, -0.121334 51.50742, -0.121374 51.507433, -0.121259 51.507585, -0.12125 51.507583, -0.121249 51.507598, -0.121129 51.50775, -0.121121 51.507747, -0.121117 51.507763, -0.120992 51.507909, -0.120984 51.507908, -0.12098 51.507922, -0.120842 51.508072, -0.120823 51.508079, -0.12083 51.508083, -0.120686 51.508226, -0.120666 51.508234, -0.120673 51.508239, -0.120586 51.508318, -0.120507 51.508368, -0.120495 51.508364, -0.120472 51.508393, -0.120361 51.508344, -0.120289 51.508394, -0.120297 51.508397, -0.120233 51.508453, -0.120199 51.508464, -0.120212 51.50847, -0.120142 51.508527, -0.12013 51.50852, -0.120061 51.508577, -0.120177 51.508632, -0.12008 51.50872, -0.119977 51.508795, -0.119968 51.508789, -0.119958 51.508805, -0.119776 51.508922, -0.119748 51.50893, -0.119758 51.508934, -0.119353 51.509167, -0.119346 51.509162, -0.119331 51.509177, -0.119237 51.509226, -0.119127 51.509281, -0.119098 51.509285, -0.119106 51.509291, -0.118878 51.509398, -0.118845 51.509366, -0.118795 51.50937, -0.118782 51.509359, -0.118738 51.509379, -0.118751 51.509408, -0.118729 51.509437, -0.118531 51.509524, -0.118519 51.509512, -0.118348 51.509579, -0.118354 51.509585, -0.11809 51.509683, -0.118048 51.509637, -0.117638 51.509775, -0.117678 51.509822, -0.11764 51.509849, -0.117433 51.509915, -0.117347 51.509919, -0.11736 51.509938, -0.117307 51.509956, -0.117293 51.509938, -0.11724 51.509974, -0.11688 51.510074, -0.116897 51.510093, -0.116887 51.510096, -0.116893 51.510104, -0.116655 51.510162, -0.116651 51.510157, -0.116634 51.510167, -0.116078 51.510303, -0.116075 51.510295, -0.11605 51.510309, -0.115782 51.510365, -0.115779 51.510358, -0.115761 51.51037, -0.115486 51.510425, -0.115481 51.510416, -0.115464 51.510428, -0.114896 51.510536, -0.114893 51.510529, -0.114869 51.51054, -0.114592 51.510583, -0.114569 51.510581, -0.114571 51.510587, -0.114297 51.51063, -0.114295 51.510624, -0.113988 51.510674, -0.11396 51.510671, -0.113964 51.510678, -0.113688 51.510713, -0.113687 51.510705, -0.113661 51.510716, -0.113379 51.510747, -0.113357 51.510743, -0.113358 51.51075, -0.11307 51.510777, -0.113049 51.510773, -0.113049 51.510779, -0.112696 51.510791, -0.112683 51.510747, -0.112656 51.510734, -0.112439 51.510758, -0.112327 51.510801, -0.111986 51.510819, -0.111834 51.510806, -0.11188 51.510826, -0.111883 51.510854, -0.111691 51.510861, -0.11169 51.510832, -0.111555 51.510833, -0.111561 51.510911, -0.111549 51.511319, -0.111505 51.511644, -0.111542 51.511732, -0.111685 51.511955, -0.111745 51.512003, -0.111862 51.511968, -0.112132 51.512267, -0.112162 51.512306, -0.112033 51.512332, -0.112175 51.512516, -0.112388 51.51277, -0.112322 51.512799, -0.112346 51.512828, -0.112188 51.51289, -0.112312 51.513038, -0.111713 51.513197, -0.111833 51.513475, -0.111955 51.513687, -0.111076 51.513827, -0.111112 51.513962, -0.111527 51.515225, -0.111581 51.51534, -0.111662 51.515335, -0.111682 51.5153, -0.112299 51.515219, -0.112282 51.515149, -0.113834 51.514822, -0.114693 51.516042, -0.117251 51.515382, -0.117592 51.515228, -0.118598 51.514965, -0.118675 51.514717, -0.119296 51.514541, -0.119468 51.514507, -0.120321 51.5146, -0.121291 51.51479, -0.121818 51.514868, -0.122073 51.51463, -0.122869 51.515146, -0.123354 51.514792, -0.123559 51.514717, -0.123952 51.514463, -0.124467 51.514153, -0.125237 51.513778, -0.126173 51.513373, -0.126643 51.513146, -0.126919 51.512959, -0.127018 51.512877, -0.127152 51.512713, -0.127253 51.512681, -0.127327 51.512667, -0.127577 51.512654, -0.127964 51.512861, -0.128247 51.513074, -0.128844 51.513391, -0.128978 51.513438, -0.129095 51.513464, -0.129336 51.513485, -0.129664 51.514128, -0.129827 51.514479, -0.130413 51.51594, -0.130446 51.516081, -0.130441 51.516179, -0.130347 51.516449, -0.130344 51.516497, -0.130402 51.516596, -0.130806 51.517104, -0.131089 51.517021, -0.131561 51.516946, -0.132449 51.51672, -0.132543 51.517166, -0.132979 51.517366, -0.133597 51.51773, -0.133917 51.517553, -0.133988 51.517548, -0.134045 51.517563, -0.134449 51.517951, -0.134317 51.518023, -0.135233 51.518935, -0.135826 51.518696, -0.136297 51.519149, -0.137008 51.518886, -0.13801 51.519817, -0.138145 51.520006, -0.138181 51.520043, -0.138711 51.520441, -0.139779 51.521349, -0.141391 51.52265, -0.142876 51.52388, -0.143068 51.523872, -0.143287 51.52388, -0.143496 51.523909, -0.143488 51.524028, -0.143389 51.524543, -0.143471 51.524625, -0.143964 51.52469, -0.144154 51.524644, -0.144129 51.523998, -0.144683 51.524066, -0.144828 51.524057, -0.145173 51.523996, -0.14579 51.525272, -0.14717 51.525043, -0.149897 51.531207, -0.151456 51.534629, -0.152707 51.537521, -0.154156 51.537421, -0.154721 51.537351, -0.154969 51.537312, -0.155456 51.537207, -0.155824 51.537106, -0.157554 51.536754, -0.158606 51.536521, -0.159416 51.536364, -0.160461 51.537283, -0.161894 51.536861, -0.163365 51.536405, -0.163594 51.536306, -0.163767 51.536221, -0.164936 51.535782, -0.166558 51.536902, -0.168019 51.537893, -0.168425 51.538122, -0.169019 51.538415, -0.169236 51.538505, -0.169517 51.538599, -0.170865 51.537795, -0.171956 51.538385, -0.173486 51.537634, -0.17401 51.538041)))"  # noqa: E501

    # Point is Nelson's column TQ 30015 80415
    input_wkt = "POINT (530015 180415)"

    wkt.normalise(input_wkt, issues=issues, boundary=boundary)
    assert len(issues.rows) == 1
    assert issues.rows[0]["issue-type"] == "OSGB"


def test_normalise_custom_boundary_northings_easting_point_not_within():
    wkt = WktDataType()
    issues = IssueLog()

    # Boundary is Kensington and Chelsea LPA
    boundary = "MULTIPOLYGON (((-0.227565 51.530157, -0.227822 51.530182, -0.22814 51.530242, -0.228348 51.530302, -0.228479 51.530355, -0.228703 51.52988, -0.228301 51.529152, -0.228183 51.529017, -0.227995 51.528854, -0.227803 51.528651, -0.227716 51.528545, -0.227564 51.528331, -0.227484 51.528177, -0.227434 51.528052, -0.227388 51.527894, -0.227353 51.527705, -0.227331 51.527508, -0.227323 51.52729, -0.227326 51.527104, -0.227393 51.52625, -0.227368 51.525963, -0.227275 51.525319, -0.227171 51.524794, -0.226596 51.524797, -0.226709 51.522355, -0.226705 51.521978, -0.228047 51.521359, -0.22806 51.521196, -0.228276 51.521098, -0.226709 51.519768, -0.226739 51.519745, -0.226677 51.519701, -0.226539 51.519579, -0.226508 51.519543, -0.226454 51.519534, -0.226404 51.519491, -0.226347 51.519513, -0.225653 51.518889, -0.224894 51.518122, -0.224723 51.517973, -0.22444 51.517657, -0.224257 51.517497, -0.224291 51.517454, -0.223644 51.516744, -0.222727 51.515714, -0.22258 51.515644, -0.222378 51.515275, -0.222253 51.515085, -0.222008 51.514746, -0.221733 51.514332, -0.221456 51.513896, -0.221439 51.513812, -0.221473 51.513646, -0.221336 51.51347, -0.221108 51.513113, -0.220412 51.512067, -0.22031 51.511839, -0.220115 51.511506, -0.219913 51.511186, -0.21981 51.510974, -0.219547 51.510342, -0.219263 51.509576, -0.217865 51.509761, -0.218028 51.510229, -0.217623 51.510267, -0.217186 51.510393, -0.216936 51.510103, -0.216939 51.510025, -0.216984 51.509973, -0.216836 51.509689, -0.216791 51.509569, -0.216818 51.509445, -0.216589 51.509326, -0.216438 51.509203, -0.216407 51.509122, -0.216068 51.509162, -0.216062 51.509126, -0.215797 51.509116, -0.215588 51.508541, -0.215179 51.507648, -0.215838 51.507521, -0.21612 51.507521, -0.216146 51.507397, -0.216203 51.506949, -0.21594 51.506402, -0.216219 51.506359, -0.216297 51.506365, -0.216364 51.506448, -0.217966 51.506146, -0.21755 51.505468, -0.217611 51.505444, -0.217575 51.505382, -0.217395 51.505116, -0.216986 51.504466, -0.216558 51.503953, -0.216352 51.503671, -0.216212 51.503703, -0.215995 51.503391, -0.215352 51.502704, -0.21495 51.502299, -0.21505 51.502249, -0.215021 51.502189, -0.214695 51.501645, -0.214109 51.500771, -0.213039 51.499849, -0.212569 51.49953, -0.211655 51.498988, -0.210801 51.498525, -0.210246 51.498129, -0.210028 51.497928, -0.209563 51.497396, -0.208944 51.496811, -0.207978 51.496023, -0.207364 51.496148, -0.207294 51.496043, -0.207258 51.495968, -0.207201 51.495906, -0.207112 51.495845, -0.20708 51.495812, -0.20702 51.495769, -0.206695 51.495546, -0.206567 51.495476, -0.205593 51.495038, -0.205168 51.494829, -0.20476 51.494609, -0.204839 51.494552, -0.204362 51.49429, -0.203764 51.493857, -0.203615 51.493771, -0.203166 51.493424, -0.203009 51.493321, -0.203108 51.493291, -0.202757 51.492913, -0.202402 51.492486, -0.202219 51.492281, -0.201811 51.491852, -0.202361 51.491665, -0.201899 51.491261, -0.200911 51.490372, -0.200599 51.490075, -0.200351 51.489983, -0.199351 51.489121, -0.198927 51.488799, -0.199002 51.488758, -0.198275 51.488123, -0.198043 51.487956, -0.197878 51.487852, -0.19752 51.487655, -0.197076 51.487451, -0.196424 51.487207, -0.195964 51.487373, -0.194889 51.486767, -0.194657 51.486622, -0.194293 51.486362, -0.193597 51.485814, -0.193167 51.485445, -0.192929 51.485217, -0.192006 51.484274, -0.191796 51.48402, -0.19169 51.484071, -0.191368 51.483773, -0.191003 51.483384, -0.190635 51.483042, -0.190132 51.482634, -0.189496 51.482089, -0.189017 51.481693, -0.188171 51.48088, -0.187379 51.480324, -0.187197 51.480183, -0.186706 51.479767, -0.186524 51.479871, -0.18634 51.479724, -0.186213 51.479595, -0.186143 51.479512, -0.186018 51.479344, -0.185746 51.478939, -0.185608 51.478788, -0.184645 51.478098, -0.184553 51.478023, -0.184009 51.477533, -0.183873 51.477432, -0.183776 51.477479, -0.183433 51.4774, -0.183329 51.477353, -0.182753 51.477398, -0.18255 51.47735, -0.182162 51.477385, -0.182044 51.477424, -0.180816 51.477916, -0.180466 51.477948, -0.180269 51.477957, -0.179662 51.477962, -0.179262 51.477994, -0.179037 51.478493, -0.1789 51.478761, -0.178833 51.478855, -0.178793 51.478896, -0.178683 51.478981, -0.178008 51.479671, -0.177956 51.479713, -0.177901 51.479735, -0.177642 51.47997, -0.177514 51.480103, -0.177744 51.480234, -0.177682 51.480351, -0.176531 51.481149, -0.176299 51.481248, -0.176068 51.481374, -0.175931 51.481521, -0.175862 51.481584, -0.175617 51.481663, -0.175398 51.481717, -0.174463 51.481854, -0.174028 51.48194, -0.173942 51.481852, -0.17397 51.481841, -0.173914 51.481785, -0.17337 51.481952, -0.173192 51.482011, -0.173194 51.482016, -0.17281 51.482126, -0.171777 51.482389, -0.171253 51.482512, -0.170712 51.482628, -0.169747 51.482811, -0.169119 51.482916, -0.168583 51.482996, -0.167067 51.483192, -0.165145 51.483455, -0.16514 51.483442, -0.165054 51.483451, -0.165042 51.483453, -0.165045 51.483467, -0.164954 51.48348, -0.155761 51.484699, -0.155021 51.484816, -0.153514 51.485083, -0.152932 51.485171, -0.152046 51.485276, -0.150698 51.485419, -0.149976 51.485468, -0.150062 51.485897, -0.150095 51.485978, -0.150171 51.486093, -0.150342 51.486234, -0.151389 51.486876, -0.1517 51.487057, -0.153461 51.488181, -0.155849 51.489607, -0.155173 51.490049, -0.155437 51.490448, -0.155544 51.490671, -0.15563 51.490897, -0.155796 51.491452, -0.154793 51.491964, -0.155984 51.493223, -0.154995 51.493855, -0.155989 51.494495, -0.155914 51.494639, -0.155817 51.494732, -0.155612 51.49488, -0.155295 51.495065, -0.155523 51.49534, -0.155608 51.495504, -0.155654 51.495629, -0.156072 51.497764, -0.157849 51.499019, -0.158412 51.501081, -0.158476 51.501207, -0.158492 51.501261, -0.158501 51.501409, -0.158478 51.501516, -0.158448 51.50225, -0.158576 51.502234, -0.159149 51.502104, -0.160564 51.501767, -0.160757 51.501705, -0.160999 51.501591, -0.16132 51.501396, -0.161546 51.501227, -0.162342 51.500472, -0.162574 51.500294, -0.162833 51.500131, -0.165481 51.498698, -0.165779 51.499243, -0.167615 51.498304, -0.167904 51.498522, -0.168026 51.498885, -0.168178 51.498998, -0.16839 51.499022, -0.16962 51.498904, -0.171475 51.498689, -0.171777 51.498609, -0.171781 51.498534, -0.172448 51.49847, -0.17246 51.498393, -0.173535 51.498302, -0.173543 51.498222, -0.179547 51.49778, -0.179725 51.498687, -0.180312 51.501462, -0.180907 51.501423, -0.18135 51.501431, -0.181633 51.501422, -0.182037 51.501449, -0.182591 51.501499, -0.183057 51.501568, -0.184235 51.501795, -0.184385 51.502114, -0.187909 51.51018, -0.188538 51.510159, -0.189696 51.510078, -0.190913 51.51002, -0.191699 51.509941, -0.192122 51.509874, -0.19296 51.511815, -0.193631 51.511693, -0.194041 51.511758, -0.194343 51.512714, -0.19505 51.515033, -0.195743 51.514958, -0.199178 51.514553, -0.19987 51.516778, -0.200723 51.517978, -0.201457 51.517803, -0.202355 51.518849, -0.202946 51.519475, -0.203185 51.519766, -0.203256 51.519875, -0.203395 51.520263, -0.203556 51.520454, -0.203742 51.520624, -0.203466 51.520712, -0.203085 51.520819, -0.202645 51.520901, -0.202201 51.520888, -0.20122 51.520838, -0.200744 51.520823, -0.200748 51.520715, -0.200623 51.520712, -0.200612 51.520797, -0.201504 51.521984, -0.201531 51.522348, -0.201601 51.522622, -0.201615 51.522744, -0.20256 51.523021, -0.202994 51.523133, -0.203534 51.523319, -0.203857 51.523461, -0.204341 51.523841, -0.205017 51.524716, -0.205166 51.52493, -0.205465 51.525299, -0.205667 51.525535, -0.205878 51.525741, -0.206154 51.525944, -0.206483 51.526067, -0.206952 51.526187, -0.207295 51.526241, -0.207583 51.526259, -0.208045 51.526308, -0.208212 51.526318, -0.208813 51.526429, -0.209554 51.52658, -0.210254 51.526683, -0.212674 51.526868, -0.213291 51.526899, -0.213729 51.526876, -0.215547 51.526722, -0.215651 51.526916, -0.215809 51.527263, -0.215899 51.527499, -0.215899 51.527589, -0.215882 51.527659, -0.215791 51.52783, -0.216005 51.52793, -0.216643 51.528204, -0.217043 51.528367, -0.217443 51.528496, -0.217955 51.528642, -0.218236 51.528713, -0.218688 51.528802, -0.219033 51.528855, -0.221502 51.52928, -0.221879 51.529369, -0.223063 51.529776, -0.223364 51.529865, -0.22378 51.529965, -0.224272 51.530044, -0.224992 51.530137, -0.225423 51.530165, -0.225446 51.530022, -0.226183 51.529992, -0.226693 51.529982, -0.227658 51.529924, -0.227565 51.530157)))"  # noqa: E501

    # Point is Nelson's column TQ 30015 80415
    input_wkt = "POINT (530015 180415)"

    wkt.normalise(input_wkt, issues=issues, boundary=boundary)
    assert len(issues.rows) == 1
    assert issues.rows[0]["issue-type"] == "OSGB out of bounds of custom boundary"


def test_normalise_custom_boundary_mercator_point_within():
    wkt = WktDataType()
    issues = IssueLog()

    # Boundary is Westminster LPA
    boundary = "MULTIPOLYGON (((-0.17401 51.538041, -0.174069 51.538108, -0.174098 51.538156, -0.174116 51.538202, -0.174128 51.538279, -0.173896 51.539479, -0.178273 51.539794, -0.178546 51.539795, -0.178739 51.539787, -0.179013 51.539762, -0.179288 51.539707, -0.179727 51.539648, -0.180156 51.539563, -0.180395 51.539502, -0.181576 51.539148, -0.182724 51.538768, -0.183848 51.538381, -0.184053 51.538263, -0.184443 51.538077, -0.184618 51.537955, -0.184676 51.537903, -0.187726 51.535036, -0.187816 51.534989, -0.187877 51.534947, -0.187953 51.534878, -0.188558 51.534596, -0.188749 51.534526, -0.189034 51.534778, -0.189191 51.53489, -0.1893 51.534988, -0.189401 51.535064, -0.189645 51.5352, -0.189811 51.535267, -0.190381 51.535534, -0.1908 51.535761, -0.191057 51.53594, -0.19126 51.53611, -0.191459 51.536291, -0.19301 51.533991, -0.192745 51.533666, -0.192383 51.533303, -0.192357 51.533257, -0.192349 51.533212, -0.19236 51.533009, -0.192386 51.532896, -0.192534 51.532631, -0.19264 51.532463, -0.192868 51.532135, -0.193114 51.531818, -0.194259 51.530466, -0.195672 51.528754, -0.196389 51.527908, -0.196503 51.527738, -0.196538 51.527702, -0.196544 51.527656, -0.196822 51.527737, -0.196822 51.527857, -0.196907 51.527928, -0.196997 51.527946, -0.197158 51.527944, -0.197225 51.527932, -0.197476 51.527854, -0.197774 51.527902, -0.197926 51.52837, -0.19805 51.528618, -0.197971 51.528728, -0.197949 51.528771, -0.19793 51.528852, -0.197948 51.529019, -0.197977 51.529114, -0.197978 51.529163, -0.197901 51.529615, -0.197916 51.529938, -0.197951 51.530079, -0.197969 51.530122, -0.198191 51.530374, -0.198273 51.530447, -0.19857 51.530664, -0.198661 51.530739, -0.198834 51.530857, -0.198994 51.530938, -0.19915 51.530995, -0.199306 51.531091, -0.199387 51.531153, -0.199538 51.53124, -0.200424 51.53162, -0.20065 51.531699, -0.201083 51.53191, -0.201273 51.532047, -0.201375 51.532157, -0.201451 51.532303, -0.201665 51.532562, -0.201853 51.532568, -0.20201 51.532602, -0.202968 51.532904, -0.203241 51.532883, -0.203574 51.532888, -0.204579 51.532944, -0.205285 51.532959, -0.205506 51.532952, -0.206235 51.5329, -0.206584 51.53286, -0.207311 51.53284, -0.207624 51.532822, -0.207922 51.532779, -0.208657 51.532637, -0.209311 51.532474, -0.209663 51.532375, -0.210817 51.532014, -0.211027 51.531961, -0.211378 51.531907, -0.211711 51.531844, -0.212234 51.531813, -0.213243 51.531768, -0.214022 51.531615, -0.21467 51.53152, -0.215183 51.531391, -0.215244 51.531366, -0.215304 51.531325, -0.215326 51.531293, -0.215338 51.53125, -0.215336 51.531199, -0.215143 51.530565, -0.215079 51.530397, -0.215073 51.53034, -0.21508 51.53026, -0.215105 51.530174, -0.215154 51.530074, -0.215204 51.529995, -0.215241 51.529952, -0.21529 51.529914, -0.215351 51.52988, -0.215447 51.529846, -0.215538 51.5298, -0.215859 51.529727, -0.215923 51.529563, -0.216016 51.529258, -0.216052 51.529075, -0.216064 51.528876, -0.216005 51.52793, -0.215791 51.52783, -0.215882 51.527659, -0.215899 51.527589, -0.215899 51.527499, -0.215809 51.527263, -0.215651 51.526916, -0.215547 51.526722, -0.213729 51.526876, -0.213291 51.526899, -0.212674 51.526868, -0.211938 51.526815, -0.210254 51.526683, -0.20997 51.526646, -0.209554 51.52658, -0.208813 51.526429, -0.208212 51.526318, -0.208045 51.526308, -0.207583 51.526259, -0.207295 51.526241, -0.206952 51.526187, -0.206483 51.526067, -0.206154 51.525944, -0.205878 51.525741, -0.205667 51.525535, -0.205465 51.525299, -0.205166 51.52493, -0.205017 51.524716, -0.204341 51.523841, -0.203857 51.523461, -0.203534 51.523319, -0.202994 51.523133, -0.20256 51.523021, -0.201615 51.522744, -0.201601 51.522622, -0.201531 51.522348, -0.201504 51.521984, -0.200612 51.520797, -0.200623 51.520712, -0.200748 51.520715, -0.200744 51.520823, -0.20122 51.520838, -0.202201 51.520888, -0.202645 51.520901, -0.203085 51.520819, -0.203466 51.520712, -0.203742 51.520624, -0.203556 51.520454, -0.203395 51.520263, -0.203256 51.519875, -0.203185 51.519766, -0.202946 51.519475, -0.202355 51.518849, -0.201457 51.517803, -0.200723 51.517978, -0.19987 51.516778, -0.199178 51.514553, -0.195743 51.514958, -0.19505 51.515033, -0.194343 51.512714, -0.194041 51.511758, -0.193631 51.511693, -0.19296 51.511815, -0.192122 51.509874, -0.191699 51.509941, -0.190913 51.51002, -0.189696 51.510078, -0.188538 51.510159, -0.187909 51.51018, -0.184385 51.502114, -0.184235 51.501795, -0.183057 51.501568, -0.182591 51.501499, -0.182037 51.501449, -0.181633 51.501422, -0.18135 51.501431, -0.180907 51.501423, -0.180312 51.501462, -0.179725 51.498687, -0.179547 51.49778, -0.173543 51.498222, -0.173535 51.498302, -0.17246 51.498393, -0.172448 51.49847, -0.171781 51.498534, -0.171777 51.498609, -0.171475 51.498689, -0.16962 51.498904, -0.16839 51.499022, -0.168178 51.498998, -0.168026 51.498885, -0.167904 51.498522, -0.167615 51.498304, -0.165779 51.499243, -0.165481 51.498698, -0.162833 51.500131, -0.162574 51.500294, -0.162342 51.500472, -0.161546 51.501227, -0.16132 51.501396, -0.160999 51.501591, -0.160757 51.501705, -0.160564 51.501767, -0.159149 51.502104, -0.158576 51.502234, -0.158448 51.50225, -0.158478 51.501516, -0.158501 51.501409, -0.158492 51.501261, -0.158476 51.501207, -0.158412 51.501081, -0.157849 51.499019, -0.156072 51.497764, -0.155654 51.495629, -0.155608 51.495504, -0.155523 51.49534, -0.155295 51.495065, -0.155612 51.49488, -0.155817 51.494732, -0.155914 51.494639, -0.155989 51.494495, -0.154995 51.493855, -0.155984 51.493223, -0.154793 51.491964, -0.155796 51.491452, -0.15563 51.490897, -0.155544 51.490671, -0.155437 51.490448, -0.155173 51.490049, -0.155849 51.489607, -0.153461 51.488181, -0.1517 51.487057, -0.151389 51.486876, -0.150342 51.486234, -0.150171 51.486093, -0.150095 51.485978, -0.150062 51.485897, -0.149976 51.485468, -0.149216 51.485522, -0.149176 51.485676, -0.149215 51.485867, -0.14923 51.485892, -0.149441 51.485928, -0.149543 51.48597, -0.149639 51.486032, -0.149695 51.486106, -0.149566 51.486207, -0.149325 51.486179, -0.149264 51.486152, -0.149179 51.486207, -0.14907 51.486208, -0.149062 51.48617, -0.149042 51.486156, -0.148944 51.485878, -0.149042 51.485887, -0.14906 51.485878, -0.148997 51.485543, -0.148712 51.485556, -0.148476 51.485578, -0.147737 51.485625, -0.147717 51.485611, -0.146975 51.485608, -0.146942 51.485615, -0.146932 51.485647, -0.146571 51.485679, -0.146453 51.485677, -0.145913 51.485638, -0.145428 51.485593, -0.144297 51.485479, -0.143633 51.485396, -0.142139 51.485149, -0.141787 51.485084, -0.141796 51.485066, -0.141723 51.485053, -0.141713 51.48507, -0.141389 51.485006, -0.140786 51.484908, -0.140038 51.484821, -0.139647 51.484799, -0.139241 51.484792, -0.138884 51.484788, -0.138293 51.484799, -0.13732 51.484849, -0.136714 51.484907, -0.136185 51.484978, -0.135982 51.485067, -0.136005 51.485122, -0.13492 51.485287, -0.134771 51.485191, -0.134428 51.485262, -0.132794 51.485639, -0.132498 51.48573, -0.13206 51.48589, -0.131588 51.486124, -0.131289 51.486292, -0.13093 51.486547, -0.130733 51.486659, -0.129107 51.487743, -0.128548 51.488107, -0.12852 51.488094, -0.128257 51.488314, -0.128334 51.488349, -0.128361 51.488326, -0.128464 51.488373, -0.127299 51.489549, -0.127081 51.489644, -0.126983 51.489702, -0.126829 51.489822, -0.126292 51.490493, -0.125693 51.491219, -0.125479 51.491503, -0.125317 51.491778, -0.12499 51.492547, -0.124958 51.492639, -0.124903 51.492852, -0.124952 51.492978, -0.124923 51.493248, -0.124965 51.493251, -0.124763 51.4944, -0.124732 51.494625, -0.124677 51.494815, -0.124664 51.495032, -0.124627 51.495397, -0.124522 51.496139, -0.124409 51.496779, -0.124184 51.49795, -0.124163 51.497948, -0.124145 51.498027, -0.124182 51.49803, -0.12416 51.498139, -0.124125 51.498136, -0.124064 51.498372, -0.12389 51.49932, -0.123706 51.50024, -0.123726 51.500519, -0.12371 51.500617, -0.123634 51.500612, -0.123602 51.500765, -0.123588 51.500765, -0.123568 51.500788, -0.123549 51.501023, -0.123557 51.501042, -0.123575 51.501043, -0.123566 51.501188, -0.123556 51.501205, -0.123649 51.501203, -0.123629 51.501395, -0.123677 51.501397, -0.123648 51.501706, -0.123601 51.501704, -0.12358 51.501897, -0.123513 51.501894, -0.123493 51.501886, -0.123502 51.501902, -0.123485 51.502062, -0.123459 51.502251, -0.123447 51.50225, -0.123456 51.502266, -0.123433 51.502441, -0.12342 51.502441, -0.123429 51.502455, -0.123402 51.502632, -0.12339 51.502631, -0.123398 51.502645, -0.123369 51.502822, -0.123359 51.502822, -0.123366 51.502833, -0.123335 51.503007, -0.123323 51.50302, -0.123332 51.503021, -0.123298 51.503194, -0.123286 51.503207, -0.123295 51.503208, -0.123259 51.503384, -0.12325 51.503383, -0.123256 51.503396, -0.123219 51.503574, -0.123209 51.503574, -0.123216 51.503585, -0.123173 51.50376, -0.123164 51.503759, -0.123168 51.503773, -0.12315 51.503848, -0.123116 51.503845, -0.12311 51.503859, -0.123127 51.503861, -0.123103 51.503954, -0.123055 51.503948, -0.123057 51.503941, -0.123033 51.503939, -0.123037 51.503915, -0.122996 51.503911, -0.12296 51.504047, -0.123 51.504051, -0.123008 51.504029, -0.123032 51.504032, -0.123033 51.504025, -0.123079 51.504031, -0.123082 51.504041, -0.123061 51.504121, -0.123049 51.504134, -0.123077 51.504138, -0.123058 51.504214, -0.123047 51.504227, -0.123055 51.504228, -0.123006 51.504402, -0.122999 51.504401, -0.123003 51.504416, -0.122894 51.504777, -0.122881 51.504789, -0.12289 51.504791, -0.122836 51.504963, -0.122823 51.504976, -0.122832 51.504978, -0.122777 51.505148, -0.122769 51.505147, -0.122773 51.505159, -0.12268 51.505418, -0.122631 51.505528, -0.122638 51.505529, -0.122517 51.505815, -0.122484 51.505882, -0.122476 51.505881, -0.122478 51.505895, -0.122393 51.506061, -0.12226 51.506063, -0.122277 51.506134, -0.122127 51.506367, -0.122073 51.506468, -0.122008 51.506553, -0.121915 51.506525, -0.12164 51.506883, -0.121704 51.506947, -0.121598 51.507087, -0.121545 51.507114, -0.121575 51.507122, -0.121539 51.507168, -0.12151 51.50716, -0.121507 51.507201, -0.121334 51.50742, -0.121374 51.507433, -0.121259 51.507585, -0.12125 51.507583, -0.121249 51.507598, -0.121129 51.50775, -0.121121 51.507747, -0.121117 51.507763, -0.120992 51.507909, -0.120984 51.507908, -0.12098 51.507922, -0.120842 51.508072, -0.120823 51.508079, -0.12083 51.508083, -0.120686 51.508226, -0.120666 51.508234, -0.120673 51.508239, -0.120586 51.508318, -0.120507 51.508368, -0.120495 51.508364, -0.120472 51.508393, -0.120361 51.508344, -0.120289 51.508394, -0.120297 51.508397, -0.120233 51.508453, -0.120199 51.508464, -0.120212 51.50847, -0.120142 51.508527, -0.12013 51.50852, -0.120061 51.508577, -0.120177 51.508632, -0.12008 51.50872, -0.119977 51.508795, -0.119968 51.508789, -0.119958 51.508805, -0.119776 51.508922, -0.119748 51.50893, -0.119758 51.508934, -0.119353 51.509167, -0.119346 51.509162, -0.119331 51.509177, -0.119237 51.509226, -0.119127 51.509281, -0.119098 51.509285, -0.119106 51.509291, -0.118878 51.509398, -0.118845 51.509366, -0.118795 51.50937, -0.118782 51.509359, -0.118738 51.509379, -0.118751 51.509408, -0.118729 51.509437, -0.118531 51.509524, -0.118519 51.509512, -0.118348 51.509579, -0.118354 51.509585, -0.11809 51.509683, -0.118048 51.509637, -0.117638 51.509775, -0.117678 51.509822, -0.11764 51.509849, -0.117433 51.509915, -0.117347 51.509919, -0.11736 51.509938, -0.117307 51.509956, -0.117293 51.509938, -0.11724 51.509974, -0.11688 51.510074, -0.116897 51.510093, -0.116887 51.510096, -0.116893 51.510104, -0.116655 51.510162, -0.116651 51.510157, -0.116634 51.510167, -0.116078 51.510303, -0.116075 51.510295, -0.11605 51.510309, -0.115782 51.510365, -0.115779 51.510358, -0.115761 51.51037, -0.115486 51.510425, -0.115481 51.510416, -0.115464 51.510428, -0.114896 51.510536, -0.114893 51.510529, -0.114869 51.51054, -0.114592 51.510583, -0.114569 51.510581, -0.114571 51.510587, -0.114297 51.51063, -0.114295 51.510624, -0.113988 51.510674, -0.11396 51.510671, -0.113964 51.510678, -0.113688 51.510713, -0.113687 51.510705, -0.113661 51.510716, -0.113379 51.510747, -0.113357 51.510743, -0.113358 51.51075, -0.11307 51.510777, -0.113049 51.510773, -0.113049 51.510779, -0.112696 51.510791, -0.112683 51.510747, -0.112656 51.510734, -0.112439 51.510758, -0.112327 51.510801, -0.111986 51.510819, -0.111834 51.510806, -0.11188 51.510826, -0.111883 51.510854, -0.111691 51.510861, -0.11169 51.510832, -0.111555 51.510833, -0.111561 51.510911, -0.111549 51.511319, -0.111505 51.511644, -0.111542 51.511732, -0.111685 51.511955, -0.111745 51.512003, -0.111862 51.511968, -0.112132 51.512267, -0.112162 51.512306, -0.112033 51.512332, -0.112175 51.512516, -0.112388 51.51277, -0.112322 51.512799, -0.112346 51.512828, -0.112188 51.51289, -0.112312 51.513038, -0.111713 51.513197, -0.111833 51.513475, -0.111955 51.513687, -0.111076 51.513827, -0.111112 51.513962, -0.111527 51.515225, -0.111581 51.51534, -0.111662 51.515335, -0.111682 51.5153, -0.112299 51.515219, -0.112282 51.515149, -0.113834 51.514822, -0.114693 51.516042, -0.117251 51.515382, -0.117592 51.515228, -0.118598 51.514965, -0.118675 51.514717, -0.119296 51.514541, -0.119468 51.514507, -0.120321 51.5146, -0.121291 51.51479, -0.121818 51.514868, -0.122073 51.51463, -0.122869 51.515146, -0.123354 51.514792, -0.123559 51.514717, -0.123952 51.514463, -0.124467 51.514153, -0.125237 51.513778, -0.126173 51.513373, -0.126643 51.513146, -0.126919 51.512959, -0.127018 51.512877, -0.127152 51.512713, -0.127253 51.512681, -0.127327 51.512667, -0.127577 51.512654, -0.127964 51.512861, -0.128247 51.513074, -0.128844 51.513391, -0.128978 51.513438, -0.129095 51.513464, -0.129336 51.513485, -0.129664 51.514128, -0.129827 51.514479, -0.130413 51.51594, -0.130446 51.516081, -0.130441 51.516179, -0.130347 51.516449, -0.130344 51.516497, -0.130402 51.516596, -0.130806 51.517104, -0.131089 51.517021, -0.131561 51.516946, -0.132449 51.51672, -0.132543 51.517166, -0.132979 51.517366, -0.133597 51.51773, -0.133917 51.517553, -0.133988 51.517548, -0.134045 51.517563, -0.134449 51.517951, -0.134317 51.518023, -0.135233 51.518935, -0.135826 51.518696, -0.136297 51.519149, -0.137008 51.518886, -0.13801 51.519817, -0.138145 51.520006, -0.138181 51.520043, -0.138711 51.520441, -0.139779 51.521349, -0.141391 51.52265, -0.142876 51.52388, -0.143068 51.523872, -0.143287 51.52388, -0.143496 51.523909, -0.143488 51.524028, -0.143389 51.524543, -0.143471 51.524625, -0.143964 51.52469, -0.144154 51.524644, -0.144129 51.523998, -0.144683 51.524066, -0.144828 51.524057, -0.145173 51.523996, -0.14579 51.525272, -0.14717 51.525043, -0.149897 51.531207, -0.151456 51.534629, -0.152707 51.537521, -0.154156 51.537421, -0.154721 51.537351, -0.154969 51.537312, -0.155456 51.537207, -0.155824 51.537106, -0.157554 51.536754, -0.158606 51.536521, -0.159416 51.536364, -0.160461 51.537283, -0.161894 51.536861, -0.163365 51.536405, -0.163594 51.536306, -0.163767 51.536221, -0.164936 51.535782, -0.166558 51.536902, -0.168019 51.537893, -0.168425 51.538122, -0.169019 51.538415, -0.169236 51.538505, -0.169517 51.538599, -0.170865 51.537795, -0.171956 51.538385, -0.173486 51.537634, -0.17401 51.538041)))"  # noqa: E501

    # Point is Nelson's column
    # https://epsg.io/map#srs=3857&x=-14245.780102&y=6711600.069496&z=17&layer=streets
    input_wkt = "POINT (-14245.780102 6711600.069496)"

    wkt.normalise(input_wkt, issues=issues, boundary=boundary)
    assert len(issues.rows) == 1
    assert issues.rows[0]["issue-type"] == "Mercator"


def test_normalise_custom_boundary_mercator_point_not_within():
    wkt = WktDataType()
    issues = IssueLog()

    # Boundary is Kensington and Chelsea LPA
    boundary = "MULTIPOLYGON (((-0.227565 51.530157, -0.227822 51.530182, -0.22814 51.530242, -0.228348 51.530302, -0.228479 51.530355, -0.228703 51.52988, -0.228301 51.529152, -0.228183 51.529017, -0.227995 51.528854, -0.227803 51.528651, -0.227716 51.528545, -0.227564 51.528331, -0.227484 51.528177, -0.227434 51.528052, -0.227388 51.527894, -0.227353 51.527705, -0.227331 51.527508, -0.227323 51.52729, -0.227326 51.527104, -0.227393 51.52625, -0.227368 51.525963, -0.227275 51.525319, -0.227171 51.524794, -0.226596 51.524797, -0.226709 51.522355, -0.226705 51.521978, -0.228047 51.521359, -0.22806 51.521196, -0.228276 51.521098, -0.226709 51.519768, -0.226739 51.519745, -0.226677 51.519701, -0.226539 51.519579, -0.226508 51.519543, -0.226454 51.519534, -0.226404 51.519491, -0.226347 51.519513, -0.225653 51.518889, -0.224894 51.518122, -0.224723 51.517973, -0.22444 51.517657, -0.224257 51.517497, -0.224291 51.517454, -0.223644 51.516744, -0.222727 51.515714, -0.22258 51.515644, -0.222378 51.515275, -0.222253 51.515085, -0.222008 51.514746, -0.221733 51.514332, -0.221456 51.513896, -0.221439 51.513812, -0.221473 51.513646, -0.221336 51.51347, -0.221108 51.513113, -0.220412 51.512067, -0.22031 51.511839, -0.220115 51.511506, -0.219913 51.511186, -0.21981 51.510974, -0.219547 51.510342, -0.219263 51.509576, -0.217865 51.509761, -0.218028 51.510229, -0.217623 51.510267, -0.217186 51.510393, -0.216936 51.510103, -0.216939 51.510025, -0.216984 51.509973, -0.216836 51.509689, -0.216791 51.509569, -0.216818 51.509445, -0.216589 51.509326, -0.216438 51.509203, -0.216407 51.509122, -0.216068 51.509162, -0.216062 51.509126, -0.215797 51.509116, -0.215588 51.508541, -0.215179 51.507648, -0.215838 51.507521, -0.21612 51.507521, -0.216146 51.507397, -0.216203 51.506949, -0.21594 51.506402, -0.216219 51.506359, -0.216297 51.506365, -0.216364 51.506448, -0.217966 51.506146, -0.21755 51.505468, -0.217611 51.505444, -0.217575 51.505382, -0.217395 51.505116, -0.216986 51.504466, -0.216558 51.503953, -0.216352 51.503671, -0.216212 51.503703, -0.215995 51.503391, -0.215352 51.502704, -0.21495 51.502299, -0.21505 51.502249, -0.215021 51.502189, -0.214695 51.501645, -0.214109 51.500771, -0.213039 51.499849, -0.212569 51.49953, -0.211655 51.498988, -0.210801 51.498525, -0.210246 51.498129, -0.210028 51.497928, -0.209563 51.497396, -0.208944 51.496811, -0.207978 51.496023, -0.207364 51.496148, -0.207294 51.496043, -0.207258 51.495968, -0.207201 51.495906, -0.207112 51.495845, -0.20708 51.495812, -0.20702 51.495769, -0.206695 51.495546, -0.206567 51.495476, -0.205593 51.495038, -0.205168 51.494829, -0.20476 51.494609, -0.204839 51.494552, -0.204362 51.49429, -0.203764 51.493857, -0.203615 51.493771, -0.203166 51.493424, -0.203009 51.493321, -0.203108 51.493291, -0.202757 51.492913, -0.202402 51.492486, -0.202219 51.492281, -0.201811 51.491852, -0.202361 51.491665, -0.201899 51.491261, -0.200911 51.490372, -0.200599 51.490075, -0.200351 51.489983, -0.199351 51.489121, -0.198927 51.488799, -0.199002 51.488758, -0.198275 51.488123, -0.198043 51.487956, -0.197878 51.487852, -0.19752 51.487655, -0.197076 51.487451, -0.196424 51.487207, -0.195964 51.487373, -0.194889 51.486767, -0.194657 51.486622, -0.194293 51.486362, -0.193597 51.485814, -0.193167 51.485445, -0.192929 51.485217, -0.192006 51.484274, -0.191796 51.48402, -0.19169 51.484071, -0.191368 51.483773, -0.191003 51.483384, -0.190635 51.483042, -0.190132 51.482634, -0.189496 51.482089, -0.189017 51.481693, -0.188171 51.48088, -0.187379 51.480324, -0.187197 51.480183, -0.186706 51.479767, -0.186524 51.479871, -0.18634 51.479724, -0.186213 51.479595, -0.186143 51.479512, -0.186018 51.479344, -0.185746 51.478939, -0.185608 51.478788, -0.184645 51.478098, -0.184553 51.478023, -0.184009 51.477533, -0.183873 51.477432, -0.183776 51.477479, -0.183433 51.4774, -0.183329 51.477353, -0.182753 51.477398, -0.18255 51.47735, -0.182162 51.477385, -0.182044 51.477424, -0.180816 51.477916, -0.180466 51.477948, -0.180269 51.477957, -0.179662 51.477962, -0.179262 51.477994, -0.179037 51.478493, -0.1789 51.478761, -0.178833 51.478855, -0.178793 51.478896, -0.178683 51.478981, -0.178008 51.479671, -0.177956 51.479713, -0.177901 51.479735, -0.177642 51.47997, -0.177514 51.480103, -0.177744 51.480234, -0.177682 51.480351, -0.176531 51.481149, -0.176299 51.481248, -0.176068 51.481374, -0.175931 51.481521, -0.175862 51.481584, -0.175617 51.481663, -0.175398 51.481717, -0.174463 51.481854, -0.174028 51.48194, -0.173942 51.481852, -0.17397 51.481841, -0.173914 51.481785, -0.17337 51.481952, -0.173192 51.482011, -0.173194 51.482016, -0.17281 51.482126, -0.171777 51.482389, -0.171253 51.482512, -0.170712 51.482628, -0.169747 51.482811, -0.169119 51.482916, -0.168583 51.482996, -0.167067 51.483192, -0.165145 51.483455, -0.16514 51.483442, -0.165054 51.483451, -0.165042 51.483453, -0.165045 51.483467, -0.164954 51.48348, -0.155761 51.484699, -0.155021 51.484816, -0.153514 51.485083, -0.152932 51.485171, -0.152046 51.485276, -0.150698 51.485419, -0.149976 51.485468, -0.150062 51.485897, -0.150095 51.485978, -0.150171 51.486093, -0.150342 51.486234, -0.151389 51.486876, -0.1517 51.487057, -0.153461 51.488181, -0.155849 51.489607, -0.155173 51.490049, -0.155437 51.490448, -0.155544 51.490671, -0.15563 51.490897, -0.155796 51.491452, -0.154793 51.491964, -0.155984 51.493223, -0.154995 51.493855, -0.155989 51.494495, -0.155914 51.494639, -0.155817 51.494732, -0.155612 51.49488, -0.155295 51.495065, -0.155523 51.49534, -0.155608 51.495504, -0.155654 51.495629, -0.156072 51.497764, -0.157849 51.499019, -0.158412 51.501081, -0.158476 51.501207, -0.158492 51.501261, -0.158501 51.501409, -0.158478 51.501516, -0.158448 51.50225, -0.158576 51.502234, -0.159149 51.502104, -0.160564 51.501767, -0.160757 51.501705, -0.160999 51.501591, -0.16132 51.501396, -0.161546 51.501227, -0.162342 51.500472, -0.162574 51.500294, -0.162833 51.500131, -0.165481 51.498698, -0.165779 51.499243, -0.167615 51.498304, -0.167904 51.498522, -0.168026 51.498885, -0.168178 51.498998, -0.16839 51.499022, -0.16962 51.498904, -0.171475 51.498689, -0.171777 51.498609, -0.171781 51.498534, -0.172448 51.49847, -0.17246 51.498393, -0.173535 51.498302, -0.173543 51.498222, -0.179547 51.49778, -0.179725 51.498687, -0.180312 51.501462, -0.180907 51.501423, -0.18135 51.501431, -0.181633 51.501422, -0.182037 51.501449, -0.182591 51.501499, -0.183057 51.501568, -0.184235 51.501795, -0.184385 51.502114, -0.187909 51.51018, -0.188538 51.510159, -0.189696 51.510078, -0.190913 51.51002, -0.191699 51.509941, -0.192122 51.509874, -0.19296 51.511815, -0.193631 51.511693, -0.194041 51.511758, -0.194343 51.512714, -0.19505 51.515033, -0.195743 51.514958, -0.199178 51.514553, -0.19987 51.516778, -0.200723 51.517978, -0.201457 51.517803, -0.202355 51.518849, -0.202946 51.519475, -0.203185 51.519766, -0.203256 51.519875, -0.203395 51.520263, -0.203556 51.520454, -0.203742 51.520624, -0.203466 51.520712, -0.203085 51.520819, -0.202645 51.520901, -0.202201 51.520888, -0.20122 51.520838, -0.200744 51.520823, -0.200748 51.520715, -0.200623 51.520712, -0.200612 51.520797, -0.201504 51.521984, -0.201531 51.522348, -0.201601 51.522622, -0.201615 51.522744, -0.20256 51.523021, -0.202994 51.523133, -0.203534 51.523319, -0.203857 51.523461, -0.204341 51.523841, -0.205017 51.524716, -0.205166 51.52493, -0.205465 51.525299, -0.205667 51.525535, -0.205878 51.525741, -0.206154 51.525944, -0.206483 51.526067, -0.206952 51.526187, -0.207295 51.526241, -0.207583 51.526259, -0.208045 51.526308, -0.208212 51.526318, -0.208813 51.526429, -0.209554 51.52658, -0.210254 51.526683, -0.212674 51.526868, -0.213291 51.526899, -0.213729 51.526876, -0.215547 51.526722, -0.215651 51.526916, -0.215809 51.527263, -0.215899 51.527499, -0.215899 51.527589, -0.215882 51.527659, -0.215791 51.52783, -0.216005 51.52793, -0.216643 51.528204, -0.217043 51.528367, -0.217443 51.528496, -0.217955 51.528642, -0.218236 51.528713, -0.218688 51.528802, -0.219033 51.528855, -0.221502 51.52928, -0.221879 51.529369, -0.223063 51.529776, -0.223364 51.529865, -0.22378 51.529965, -0.224272 51.530044, -0.224992 51.530137, -0.225423 51.530165, -0.225446 51.530022, -0.226183 51.529992, -0.226693 51.529982, -0.227658 51.529924, -0.227565 51.530157)))"  # noqa: E501

    # Point is Nelson's column
    # https://epsg.io/map#srs=3857&x=-14245.780102&y=6711600.069496&z=17&layer=streets
    input_wkt = "POINT (-14245.780102 6711600.069496)"

    wkt.normalise(input_wkt, issues=issues, boundary=boundary)
    assert len(issues.rows) == 1
    assert issues.rows[0]["issue-type"] == "invalid coordinates"
